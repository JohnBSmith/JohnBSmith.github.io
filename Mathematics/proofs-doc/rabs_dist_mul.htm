<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>rabs_dist_mul</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="main.css" rel="stylesheet">
</head>
<body>
<h3>Theorem rabs_dist_mul</h3>
<div class='box'><div class='thm'><b class='thm'>Theorem.</b> rabs_dist_mul<br>
x ∈ ℝ → y ∈ ℝ →
  abs (x⋅y) = (abs x)⋅(abs y)</div></div>
<pre><b>Proof</b>
01. 1 ⊢ x ∈ ℝ, <a href='hypo.htm'>hypo</a>.
02. 2 ⊢ y ∈ ℝ, <a href='hypo.htm'>hypo</a>.
03. ⊢ 0 ≤ x ∨ ¬0 ≤ x, <a href='lem.htm'>lem</a>.

04. 4 ⊢ 0 ≤ x, <a href='hypo.htm'>hypo</a>.
05. 1, 4 ⊢ abs x = x, <a href='rabs_eql.htm'>rabs_eql</a> 1 4.
06. ⊢ 0 ≤ y ∨ ¬0 ≤ y, <a href='lem.htm'>lem</a>.
07. 7 ⊢ 0 ≤ y, <a href='hypo.htm'>hypo</a>.
08. 2, 7 ⊢ abs y = y, <a href='rabs_eql.htm'>rabs_eql</a> 2 7.
09. 1, 2, 4, 7 ⊢ 0 ≤ x⋅y, <a href='rle_compat_mul.htm'>rle_compat_mul</a> 1 2 4 7.
10. 1, 2 ⊢ x⋅y ∈ ℝ, <a href='rmul_closed.htm'>rmul_closed</a> 1 2.
11. 1, 2, 4, 7 ⊢ abs (x⋅y) = x⋅y, <a href='rabs_eql.htm'>rabs_eql</a> 10 9.
12. 1, 2, 4, 7 ⊢ abs (x⋅y) = (abs x)⋅y,
  <a href='eq_subst_rev.htm'>eq_subst_rev</a> 5 11, P t ↔ abs (x⋅y) = t⋅y.
13. 1, 2, 4, 7 ⊢ abs (x⋅y) = (abs x)⋅(abs y),
  <a href='eq_subst_rev.htm'>eq_subst_rev</a> 8 12, P t ↔ abs (x⋅y) = (abs x)⋅t.
14. 14 ⊢ ¬0 ≤ y, <a href='hypo.htm'>hypo</a>.
15. 2, 14 ⊢ abs y = -y, <a href='rabs_eqr.htm'>rabs_eqr</a> 2 14.
16. ⊢ 0 ∈ ℝ, <a href='calc.htm'>calc</a>.
17. 2, 14 ⊢ y ≤ 0, <a href='rle_neg.htm'>rle_neg</a> 16 2 14.
18. 1, 2, 4, 14 ⊢ x⋅y ≤ 0, <a href='rmul_nn_np.htm'>rmul_nn_np</a> 1 2 4 17.
19. 1, 2, 4, 14 ⊢ abs (x⋅y) = -(x⋅y), <a href='rabs_non_positive.htm'>rabs_non_positive</a> 10 18.
20. 1, 2 ⊢ -(x⋅y) = x⋅(-y), <a href='rmul_compatr_neg.htm'>rmul_compatr_neg</a> 1 2.
21. 1, 2, 4, 14 ⊢ abs (x⋅y) = x⋅(-y), <a href='eq_trans.htm'>eq_trans</a> 19 20.
22. 1, 2, 4, 14 ⊢ abs (x⋅y) = (abs x)⋅(-y),
  <a href='eq_subst_rev.htm'>eq_subst_rev</a> 5 21, P t ↔ abs (x⋅y) = t⋅(-y).
23. 1, 2, 4, 14 ⊢ abs (x⋅y) = (abs x)⋅(abs y),
  <a href='eq_subst_rev.htm'>eq_subst_rev</a> 15 22, P t ↔ abs (x⋅y) = (abs x)⋅t.
24. 1, 2, 4 ⊢ abs (x⋅y) = (abs x)⋅(abs y), <a href='disj_elim.htm'>disj_elim</a> 6 13 23.

25. 25 ⊢ ¬0 ≤ x, <a href='hypo.htm'>hypo</a>.
26. 1, 25 ⊢ x ≤ 0, <a href='rle_neg.htm'>rle_neg</a> 16 1 25.
27. 1, 25 ⊢ abs x = -x, <a href='rabs_non_positive.htm'>rabs_non_positive</a> 1 26.
28. ⊢ 0 ≤ y ∨ ¬0 ≤ y, <a href='lem.htm'>lem</a>.
29. 29 ⊢ 0 ≤ y, <a href='hypo.htm'>hypo</a>.
30. 2, 29 ⊢ abs y = y, <a href='rabs_eql.htm'>rabs_eql</a> 2 29.
31. 1, 2, 25, 29 ⊢ x⋅y ≤ 0, <a href='rmul_np_nn.htm'>rmul_np_nn</a> 1 2 26 29.
32. 1, 2, 25, 29 ⊢ abs (x⋅y) = -(x⋅y), <a href='rabs_non_positive.htm'>rabs_non_positive</a> 10 31.
33. 1, 2 ⊢ -(x⋅y) = (-x)⋅y, <a href='rmul_compatl_neg.htm'>rmul_compatl_neg</a> 1 2.
34. 1, 2, 25, 29 ⊢ abs (x⋅y) = (-x)⋅y, <a href='eq_trans.htm'>eq_trans</a> 32 33.
35. 1, 2, 25, 29 ⊢ abs (x⋅y) = (abs x)⋅y,
  <a href='eq_subst_rev.htm'>eq_subst_rev</a> 27 34, P t ↔ abs (x⋅y) = t⋅y.
36. 1, 2, 25, 29 ⊢ abs (x⋅y) = (abs x)⋅(abs y),
  <a href='eq_subst_rev.htm'>eq_subst_rev</a> 30 35, P t ↔ abs (x⋅y) = (abs x)⋅t.
37. 37 ⊢ ¬0 ≤ y, <a href='hypo.htm'>hypo</a>.
38. 2, 37 ⊢ abs y = -y, <a href='rabs_eqr.htm'>rabs_eqr</a> 2 37.
39. 2, 37 ⊢ y ≤ 0, <a href='rle_neg.htm'>rle_neg</a> 16 2 37.
40. 1, 2, 25, 37 ⊢ 0 ≤ x⋅y, <a href='rmul_np_np.htm'>rmul_np_np</a> 1 2 26 39.
41. 1, 2, 25, 37 ⊢ abs (x⋅y) = x⋅y, <a href='rabs_eql.htm'>rabs_eql</a> 10 40.
42. 1, 2 ⊢ (-x)⋅(-y) = x⋅y, <a href='rmul_cancel_neg.htm'>rmul_cancel_neg</a> 1 2.
43. 1, 2 ⊢ x⋅y = (-x)⋅(-y), <a href='eq_symm.htm'>eq_symm</a> 42.
44. 1, 2, 25, 37 ⊢ abs (x⋅y) = (-x)⋅(-y), <a href='eq_trans.htm'>eq_trans</a> 41 43.
45. 1, 2, 25, 37 ⊢ abs (x⋅y) = (abs x)⋅(-y),
  <a href='eq_subst_rev.htm'>eq_subst_rev</a> 27 44, P t ↔ abs (x⋅y) = t⋅(-y).
46. 1, 2, 25, 37 ⊢ abs (x⋅y) = (abs x)⋅(abs y),
  <a href='eq_subst_rev.htm'>eq_subst_rev</a> 38 45, P t ↔ abs (x⋅y) = (abs x)⋅t.
47. 1, 2, 25 ⊢ abs (x⋅y) = (abs x)⋅(abs y), <a href='disj_elim.htm'>disj_elim</a> 28 36 46.

48. 1, 2 ⊢ abs (x⋅y) = (abs x)⋅(abs y), <a href='disj_elim.htm'>disj_elim</a> 3 24 47.
rabs_dist_mul. ⊢ x ∈ ℝ → y ∈ ℝ →
  abs (x⋅y) = (abs x)⋅(abs y), <a href='subj_intro_ii.htm'>subj_intro_ii</a> 48.
</pre>
<p><b>Dependencies</b><br>The given proof depends on 20 axioms:<br><a href='comp.htm'>comp</a>, <a href='efq.htm'>efq</a>, <a href='eq_refl.htm'>eq_refl</a>, <a href='eq_subst.htm'>eq_subst</a>, <a href='ext.htm'>ext</a>, <a href='lem.htm'>lem</a>, <a href='radd_assoc.htm'>radd_assoc</a>, <a href='radd_closed.htm'>radd_closed</a>, <a href='radd_comm.htm'>radd_comm</a>, <a href='radd_inv.htm'>radd_inv</a>, <a href='radd_neutr.htm'>radd_neutr</a>, <a href='rle_antisym.htm'>rle_antisym</a>, <a href='rle_compat_add.htm'>rle_compat_add</a>, <a href='rle_compat_mul.htm'>rle_compat_mul</a>, <a href='rle_refl.htm'>rle_refl</a>, <a href='rle_total.htm'>rle_total</a>, <a href='rmul_closed.htm'>rmul_closed</a>, <a href='rmul_comm.htm'>rmul_comm</a>, <a href='rmul_distl_add.htm'>rmul_distl_add</a>, <a href='rneg_closed.htm'>rneg_closed</a>.</p>
</body>
</html>