<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>Cantor's_theorem</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="main.css" rel="stylesheet">
</head>
<body>
<h3>Theorem Cantor's_theorem</h3>
<div class='box'><div class='thm'><b class='thm'>Theorem.</b> Cantor's_theorem<br>
set X → num_lt X (power X)</div></div>
<p>This theorem states that any <a href='set_equi.htm'>set</a> is
<a href='num_lt_equi.htm'>strictly less numerous</a> than its power set.<br>
<br>
<b>Proof sketch</b><br>
First, it must be shown that an <a href='inj_equi.htm'>injection</a> i: X →
power&nbsp;X exists. This is easily witnessed by i&nbsp;x := {x}, since we have
<a href='sg_is_inj.htm'>sg_is_inj</a>. Now it must be shown that no <a href='sur_equi.htm'>surjection</a>
f: X → power&nbsp;X exists. So let f be such a surjection; we need to find
a contradiction. Consider the "diagonal" set<br>
&nbsp;&nbsp;D = {x ∈ X | x ∉ f x}.<br>
Because D ⊆ X, we have D ∈ power&nbsp;X. Furthermore, because&nbsp;f is
surjective, we have D&nbsp;∈&nbsp;rng&nbsp;f. So there is an x&nbsp;∈&nbsp;X with
D = f&nbsp;x. Since x&nbsp;∈&nbsp;X, we obtain the equivalence
x&nbsp;∈&nbsp;D&nbsp;↔ x&nbsp;∉&nbsp;f&nbsp;x
directly from the Definition of&nbsp;D. Thus<br>
&nbsp;&nbsp;x ∈ f x ↔ x ∉ f x,<br>
but this is a contradiction, as shown in <a href='diag_contra.htm'>diag_contra</a>. q.e.d.</p><pre><b>Proof</b>
let i = {t | ∃x. x ∈ X ∧ t = (x, {x})}.
01. ⊢ i = i, <a href='eq_refl.htm'>eq_refl</a>.
02. 2 ⊢ x ∈ X, <a href='hypo.htm'>hypo</a>.
03. 2 ⊢ {x} ⊆ X, <a href='sg_incl_in.htm'>sg_incl_in</a> 2.
04. 2 ⊢ set x, <a href='set_intro.htm'>set_intro</a> 2.
05. 2 ⊢ set {x}, <a href='set_sg.htm'>set_sg</a> 4.
06. 2 ⊢ {x} ∈ power X, <a href='power_intro.htm'>power_intro</a> 5 3.
07. ⊢ x ∈ X → {x} ∈ power X, <a href='subj_intro.htm'>subj_intro</a> 6.
08. ⊢ ∀x. x ∈ X → {x} ∈ power X, <a href='uq_intro.htm'>uq_intro</a> 7.
09. ⊢ map i X (power X), <a href='map_from_term.htm'>map_from_term</a> 1 8.
10. 10 ⊢ a ∈ X, <a href='hypo.htm'>hypo</a>.
11. 11 ⊢ b ∈ X, <a href='hypo.htm'>hypo</a>.
12. 12 ⊢ app i a = app i b, <a href='hypo.htm'>hypo</a>.
13. 10 ⊢ app i a = {a}, <a href='map_from_term_app.htm'>map_from_term_app</a> 1 8 10.
14. 11 ⊢ app i b = {b}, <a href='map_from_term_app.htm'>map_from_term_app</a> 1 8 11.
15. 11, 12 ⊢ app i a = {b}, <a href='eq_trans.htm'>eq_trans</a> 12 14.
16. 10, 11, 12 ⊢ {a} = {b}, <a href='eq_symm_trans.htm'>eq_symm_trans</a> 13 15.
17. 10 ⊢ set a, <a href='set_intro.htm'>set_intro</a> 10.
18. 11 ⊢ set b, <a href='set_intro.htm'>set_intro</a> 11.
19. 10, 11, 12 ⊢ a = b, <a href='sg_is_inj.htm'>sg_is_inj</a> 17 18 16.
20. ⊢ a ∈ X → b ∈ X → app i a = app i b → a = b, <a href='subj_intro_iii.htm'>subj_intro_iii</a> 19.
21. ⊢ ∀b. a ∈ X → b ∈ X → app i a = app i b → a = b, <a href='uq_intro.htm'>uq_intro</a> 20.
22. ⊢ ∀a. ∀b. a ∈ X → b ∈ X → app i a = app i b → a = b, <a href='uq_intro.htm'>uq_intro</a> 21.
23. ⊢ inj i X (power X), <a href='inj_intro.htm'>inj_intro</a> 9 22.
24. ⊢ ∃g. inj g X (power X), <a href='ex_intro.htm'>ex_intro</a> 23.

let D = {x | x ∈ X ∧ ¬x ∈ app f x}.
25. 25 ⊢ set X, <a href='hypo.htm'>hypo</a>.
26. 26 ⊢ ∃f. sur f X (power X), <a href='hypo.htm'>hypo</a>.
27. 27 ⊢ sur f X (power X), <a href='hypo.htm'>hypo</a>.
28. ⊢ D ⊆ X, <a href='sep_is_subclass.htm'>sep_is_subclass</a>.
29. 25 ⊢ set D, <a href='subset.htm'>subset</a> 28 25.
30. 25 ⊢ D ∈ power X, <a href='power_intro.htm'>power_intro</a> 29 28.
31. 27 ⊢ rng f = power X, <a href='sur_elim.htm'>sur_elim</a> 27.
32. 25, 27 ⊢ D ∈ rng f, <a href='eq_subst_rev.htm'>eq_subst_rev</a> 31 30, P t ↔ D ∈ t.
33. 27 ⊢ map f X (power X), <a href='sur_is_map.htm'>sur_is_map</a> 27.
34. 25, 27 ⊢ ∃x. x ∈ X ∧ D = app f x, <a href='map_rng_elim.htm'>map_rng_elim</a> 33 32.
35. 35 ⊢ x ∈ X ∧ D = app f x, <a href='hypo.htm'>hypo</a>.
36. 35 ⊢ x ∈ X, <a href='conj_eliml.htm'>conj_eliml</a> 35.
37. 35 ⊢ D = app f x, <a href='conj_elimr.htm'>conj_elimr</a> 35.
38. ⊢ x ∈ D ↔ x ∈ D, <a href='equi_refl.htm'>equi_refl</a>.
39. 35 ⊢ x ∈ app f x ↔ x ∈ D, <a href='eq_subst.htm'>eq_subst</a> 37 38, P t ↔ (x ∈ t ↔ x ∈ D).
40. 40 ⊢ x ∈ D, <a href='hypo.htm'>hypo</a>.
41. 40 ⊢ x ∈ X ∧ ¬x ∈ app f x, <a href='comp_elim.htm'>comp_elim</a> 40.
42. 40 ⊢ ¬x ∈ app f x, <a href='conj_elimr.htm'>conj_elimr</a> 41.
43. ⊢ x ∈ D → ¬x ∈ app f x, <a href='subj_intro.htm'>subj_intro</a> 42.
44. 44 ⊢ ¬x ∈ app f x, <a href='hypo.htm'>hypo</a>.
45. 35, 44  ⊢ x ∈ X ∧ ¬x ∈ app f x, <a href='conj_intro.htm'>conj_intro</a> 36 44.
46. 35 ⊢ set x, <a href='set_intro.htm'>set_intro</a> 36.
47. 35, 44 ⊢ x ∈ D, <a href='comp_intro.htm'>comp_intro</a> 46 45.
48. 35 ⊢ ¬x ∈ app f x → x ∈ D, <a href='subj_intro.htm'>subj_intro</a> 47.
49. 35 ⊢ x ∈ D ↔ ¬x ∈ app f x, <a href='bij_intro.htm'>bij_intro</a> 43 48.
50. 35 ⊢ x ∈ app f x ↔ ¬x ∈ app f x, <a href='equi_trans.htm'>equi_trans</a> 39 49.
51. 35 ⊢ ⊥, <a href='diag_contra.htm'>diag_contra</a> 50.
52. 25, 27 ⊢ ⊥, <a href='ex_elim.htm'>ex_elim</a> 34 51.
53. 25, 26 ⊢ ⊥, <a href='ex_elim.htm'>ex_elim</a> 26 52.
54. 25 ⊢ ¬∃f. sur f X (power X), <a href='neg_intro.htm'>neg_intro</a> 53.

55. ⊢ num_le X (power X), <a href='num_le_intro.htm'>num_le_intro</a> 24.
56. 25 ⊢ num_lt X (power X), <a href='num_lt_intro.htm'>num_lt_intro</a> 55 54.
Cantor's_theorem. ⊢ set X → num_lt X (power X), <a href='subj_intro.htm'>subj_intro</a> 56.
</pre>
<p><b>Dependencies</b><br>The given proof depends on nine axioms:<br><a href='comp.htm'>comp</a>, <a href='efq.htm'>efq</a>, <a href='eq_refl.htm'>eq_refl</a>, <a href='eq_subst.htm'>eq_subst</a>, <a href='ext.htm'>ext</a>, <a href='lem.htm'>lem</a>, <a href='pairing.htm'>pairing</a>, <a href='subset.htm'>subset</a>, <a href='union.htm'>union</a>.</p>
</body>
</html>