<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>power_equinum_indicators</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="main.css" rel="stylesheet">
</head>
<body>
<h3>Theorem power_equinum_indicators</h3>
<div class='box'><div class='thm'><b class='thm'>Theorem.</b> power_equinum_indicators<br>
set X →
  num_eq (power X) (Map X {∅, {∅}})</div></div>
<p>This theorem states that the <a href='power_eq.htm'>power set</a> of a set X is
<a href='num_eq_equi.htm'>equinumerous</a> to set of <a href='map_equi.htm'>maps</a>
from X to {0,&nbsp;1}.<br>
<br>
<b>Proof sketch</b><br>
<a href='num_eq_equi.htm'>Equinumerousity</a> of two sets means that there
is a bijection between them. We have the canonical bijection<br>
&nbsp;&nbsp;φ: power X → Map X {0, 1}, φ A := χ<sub>A</sub>,<br>
where χ<sub>A</sub> is the <a href='indicator_eq.htm'>indicator function</a> of A.
First we need to show that φ is injective. So let A, B be two arbritary
sets in the domain. Assume φ&nbsp;A = φ&nbsp;B. By definition of φ this means
χ<sub>A</sub> = χ<sub>B</sub>. Let x&nbsp;∈&nbsp;A. Then χ<sub>A</sub>&nbsp;=&nbsp;1,
thus χ<sub>B</sub>&nbsp;=&nbsp;1, and therefore x&nbsp;∈&nbsp;B. In the same way,
x&nbsp;∈&nbsp;A is derived from x&nbsp;∈&nbsp;B. Thus A = B by <a href='ext.htm'>extensionality</a>.
Now we need to show that φ is surjective. So let f be an arbritary
element in the codomain. We need to find an A with φ&nbsp;A = f.
Let A := f<sup>&minus;1</sup>{1}, the "one-fiber" of&nbsp;f.
So we need to show χ<sub>A</sub>&nbsp;x = f&nbsp;x for an arbritary x&nbsp;∈&nbsp;X,
then χ<sub>A</sub> = f holds by <a href='map_extensionality.htm'>function extensionality</a>.
There are only two cases for the value of&nbsp;f. In the case f&nbsp;x = 1, it
holds that x&nbsp;∈&nbsp;A, since A has just been defined this way. So
χ<sub>A</sub>&nbsp;x = 1, thus χ<sub>A</sub>&nbsp;x = f&nbsp;x, as desired.
In the case f&nbsp;x = 0, it holds that x&nbsp;∈&nbsp;X&nbsp;\&nbsp;A, for the same reason.
So χ<sub>A</sub>&nbsp;x = 0, thus χ<sub>A</sub>&nbsp;x = f&nbsp;x,
as desired. q.e.d.</p><pre><b>Proof</b>
let φ = {t | ∃A. A ∈ power X ∧ t = (A, χ A X)}.
01. 1 ⊢ set X, <a href='hypo.htm'>hypo</a>.
02. 2 ⊢ A ∈ power X, <a href='hypo.htm'>hypo</a>.
03. 2 ⊢ A ⊆ X, <a href='power_elim.htm'>power_elim</a> 2.
04. 2 ⊢ map (χ A X) X {∅, {∅}}, <a href='indicator_is_map.htm'>indicator_is_map</a> 3.
05. 1, 2 ⊢ χ A X ∈ Map X {∅, {∅}}, <a href='Map_intro.htm'>Map_intro</a> 4 1.
06. 1 ⊢ A ∈ power X → χ A X ∈ Map X {∅, {∅}}, <a href='subj_intro.htm'>subj_intro</a> 5.
07. 1 ⊢ ∀A. A ∈ power X → χ A X ∈ Map X {∅, {∅}}, <a href='uq_intro.htm'>uq_intro</a> 6.
08. ⊢ φ = φ, <a href='eq_refl.htm'>eq_refl</a>.
09. 1 ⊢ map φ (power X) (Map X {∅, {∅}}), <a href='map_from_term.htm'>map_from_term</a> 8 7.

10. 10 ⊢ A ∈ power X, <a href='hypo.htm'>hypo</a>.
11. 11 ⊢ B ∈ power X, <a href='hypo.htm'>hypo</a>.
12. 12 ⊢ app φ A = app φ B, <a href='hypo.htm'>hypo</a>.
13. 1, 10 ⊢ app φ A = χ A X, <a href='map_from_term_app.htm'>map_from_term_app</a> 8 7 10.
14. 1, 11 ⊢ app φ B = χ B X, <a href='map_from_term_app.htm'>map_from_term_app</a> 8 7 11.
15. 1, 10, 12 ⊢ χ A X = app φ B, <a href='eq_trans_ll.htm'>eq_trans_ll</a> 13 12.
16. 1, 10, 11, 12 ⊢ χ A X = χ B X, <a href='eq_trans.htm'>eq_trans</a> 15 14.
17. 10 ⊢ A ⊆ X, <a href='power_elim.htm'>power_elim</a> 10.
18. 11 ⊢ B ⊆ X, <a href='power_elim.htm'>power_elim</a> 11.
19. 19 ⊢ x ∈ A, <a href='hypo.htm'>hypo</a>.
20. 10, 19 ⊢ app (χ A X) x = {∅}, <a href='indicator_app_is_one.htm'>indicator_app_is_one</a> 17 19.
21. 1, 10, 11, 12, 19 ⊢ app (χ B X) x = {∅},
  <a href='eq_subst.htm'>eq_subst</a> 16 20, P t ↔ app t x = {∅}.
22. 10, 19 ⊢ x ∈ X, <a href='incl_elim.htm'>incl_elim</a> 17 19.
23. 1, 10, 11, 12, 19 ⊢ x ∈ B, <a href='from_indicator_app_is_one.htm'>from_indicator_app_is_one</a> 18 22 21.
24. 1, 10, 11, 12 ⊢ x ∈ A → x ∈ B, <a href='subj_intro.htm'>subj_intro</a> 23.
25. 25 ⊢ x ∈ B, <a href='hypo.htm'>hypo</a>.
26. 11, 25 ⊢ app (χ B X) x = {∅}, <a href='indicator_app_is_one.htm'>indicator_app_is_one</a> 18 25.
27. 1, 10, 11, 12, 25 ⊢ app (χ A X) x = {∅},
  <a href='eq_subst_rev.htm'>eq_subst_rev</a> 16 26, P t ↔ app t x = {∅}.
28. 11, 25 ⊢ x ∈ X, <a href='incl_elim.htm'>incl_elim</a> 18 25.
29. 1, 10, 11, 12, 25 ⊢ x ∈ A, <a href='from_indicator_app_is_one.htm'>from_indicator_app_is_one</a> 17 28 27.
30. 1, 10, 11, 12 ⊢ x ∈ B → x ∈ A, <a href='subj_intro.htm'>subj_intro</a> 29.
31. 1, 10, 11, 12 ⊢ x ∈ A ↔ x ∈ B, <a href='bij_intro.htm'>bij_intro</a> 24 30.
32. 1, 10, 11, 12 ⊢ ∀x. x ∈ A ↔ x ∈ B, <a href='uq_intro.htm'>uq_intro</a> 31.
33. 1, 10, 11, 12 ⊢ A = B, <a href='ext.htm'>ext</a> 32.
34. 1 ⊢ A ∈ power X → B ∈ power X → app φ A = app φ B → A = B,
  <a href='subj_intro_iii.htm'>subj_intro_iii</a> 33.
35. 1 ⊢ ∀B. A ∈ power X → B ∈ power X →
  app φ A = app φ B → A = B, <a href='uq_intro.htm'>uq_intro</a> 34.
36. 1 ⊢ ∀A. ∀B. A ∈ power X → B ∈ power X →
  app φ A = app φ B → A = B, <a href='uq_intro.htm'>uq_intro</a> 35.
37. 1 ⊢ inj φ (power X) (Map X {∅, {∅}}), <a href='inj_intro.htm'>inj_intro</a> 9 36.

let A = inv_img f {{∅}}.
38. 38 ⊢ f ∈ Map X {∅, {∅}}, <a href='hypo.htm'>hypo</a>.
39. 38 ⊢ map f X {∅, {∅}}, <a href='Map_elim.htm'>Map_elim</a> 38.
40. 38 ⊢ function f ∧ dom f = X ∧ rng f ⊆ {∅, {∅}}, <a href='map_unfold.htm'>map_unfold</a> 39.
41. 38 ⊢ dom f = X, <a href='conj_elimlr.htm'>conj_elimlr</a> 40.
42. 42 ⊢ x ∈ X, <a href='hypo.htm'>hypo</a>.
43. 38, 42 ⊢ app f x ∈ {∅, {∅}}, <a href='map_app_in_cod.htm'>map_app_in_cod</a> 39 42.
44. 38, 42 ⊢ app f x ∈ {∅} ∨ app f x ∈ {{∅}}, <a href='union_elim.htm'>union_elim</a> 43.

45. 45 ⊢ app f x ∈ {∅}, <a href='hypo.htm'>hypo</a>.
46. 45 ⊢ app f x = ∅, <a href='sg_elim.htm'>sg_elim</a> <a href='empty_set_is_set.htm'>empty_set_is_set</a> 45.
47. 45 ⊢ ∅ = app f x, <a href='eq_symm.htm'>eq_symm</a> 46.
48. 38, 42, 45 ⊢ (x, ∅) ∈ f, <a href='map_app_elim.htm'>map_app_elim</a> 39 42 47.
49. ⊢ A ⊆ dom f, <a href='inv_img_incl_in_dom.htm'>inv_img_incl_in_dom</a>.
50. 38 ⊢ A ⊆ X, <a href='eq_subst.htm'>eq_subst</a> 41 49, P t ↔ A ⊆ t.
51. 51 ⊢ x ∈ A, <a href='hypo.htm'>hypo</a>.
52. 51 ⊢ ∃y. y ∈ {{∅}} ∧ (x, y) ∈ f, <a href='inv_img_elim.htm'>inv_img_elim</a> 51.
53. 53 ⊢ y ∈ {{∅}} ∧ (x, y) ∈ f, <a href='hypo.htm'>hypo</a>.
54. 53 ⊢ y ∈ {{∅}}, <a href='conj_eliml.htm'>conj_eliml</a> 53.
55. 53 ⊢ (x, y) ∈ f, <a href='conj_elimr.htm'>conj_elimr</a> 53.
56. 38 ⊢ function f, <a href='conj_elimll.htm'>conj_elimll</a> 40.
57. 38, 42, 45, 53 ⊢ y = ∅, <a href='fn_unique_value.htm'>fn_unique_value</a> 56 55 48.
58. ⊢ set {∅}, <a href='set_sg.htm'>set_sg</a> <a href='empty_set_is_set.htm'>empty_set_is_set</a>.
59. 53 ⊢ y = {∅}, <a href='sg_elim.htm'>sg_elim</a> 58 54.
60. 38, 42, 45, 53 ⊢ ∅ = {∅}, <a href='eq_trans_ll.htm'>eq_trans_ll</a> 57 59.
61. 38, 42, 45, 53 ⊢ ⊥, <a href='neg_elim.htm'>neg_elim</a> <a href='zero_neq_one.htm'>zero_neq_one</a> 60.
62. 38, 42, 45, 51 ⊢ ⊥, <a href='ex_elim.htm'>ex_elim</a> 52 61.
63. 38, 42, 45 ⊢ ¬x ∈ A, <a href='neg_intro.htm'>neg_intro</a> 62.
64. 38, 42, 45 ⊢ x ∈ X \ A, <a href='diff_intro.htm'>diff_intro</a> 42 63.
65. 38, 42, 45 ⊢ app (χ A X) x = ∅, <a href='indicator_app_is_zero.htm'>indicator_app_is_zero</a> 50 64.
66. 38, 42, 45 ⊢ ∅ = app (χ A X) x, <a href='eq_symm.htm'>eq_symm</a> 65.
67. 38, 42, 45 ⊢ app f x = app (χ A X) x, <a href='eq_trans.htm'>eq_trans</a> 46 66.

68. 68 ⊢ app f x ∈ {{∅}}, <a href='hypo.htm'>hypo</a>.
69. 68 ⊢ app f x = {∅}, <a href='sg_elim.htm'>sg_elim</a> 58 68.
70. 68 ⊢ {∅} = app f x, <a href='eq_symm.htm'>eq_symm</a> 69.
71. 38, 42, 68 ⊢ (x, {∅}) ∈ f, <a href='map_app_elim.htm'>map_app_elim</a> 39 42 70.
72. ⊢ {∅} = {∅}, <a href='eq_refl.htm'>eq_refl</a>.
73. ⊢ {∅} ∈ {{∅}}, <a href='sg_intro.htm'>sg_intro</a> 58 72.
74. 38, 42, 68 ⊢ x ∈ A, <a href='inv_img_intro.htm'>inv_img_intro</a> 73 71.
75. 38, 42, 68 ⊢ app (χ A X) x = {∅}, <a href='indicator_app_is_one.htm'>indicator_app_is_one</a> 50 74.
76. 38, 42, 68 ⊢ {∅} = app (χ A X) x, <a href='eq_symm.htm'>eq_symm</a> 75.
77. 38, 42, 68 ⊢ app f x = app (χ A X) x, <a href='eq_trans.htm'>eq_trans</a> 69 76.

78. 38, 42 ⊢ app f x = app (χ A X) x, <a href='disj_elim.htm'>disj_elim</a> 44 67 77.
79. 38 ⊢ x ∈ X → app f x = app (χ A X) x, <a href='subj_intro.htm'>subj_intro</a> 78.
80. 38 ⊢ ∀x. x ∈ X → app f x = app (χ A X) x, <a href='uq_intro.htm'>uq_intro</a> 79.
81. 38 ⊢ map (χ A X) X {∅, {∅}}, <a href='indicator_is_map.htm'>indicator_is_map</a> 50.
82. 38 ⊢ f = χ A X, <a href='map_extensionality.htm'>map_extensionality</a> 39 81 80.
83. 1, 38 ⊢ set A, <a href='subset.htm'>subset</a> 50 1.
84. 1, 38 ⊢ A ∈ power X, <a href='power_intro.htm'>power_intro</a> 83 50.
85. 1, 38 ⊢ app φ A = χ A X, <a href='map_from_term_app.htm'>map_from_term_app</a> 8 7 84.
86. 1, 38 ⊢ χ A X = app φ A, <a href='eq_symm.htm'>eq_symm</a> 85.
87. 1, 38 ⊢ f = app φ A, <a href='eq_trans.htm'>eq_trans</a> 82 86.
88. 1, 38 ⊢ (A, f) ∈ φ, <a href='map_app_elim.htm'>map_app_elim</a> 9 84 87.
89. 1, 38 ⊢ f ∈ rng φ, <a href='rng_intro.htm'>rng_intro</a> 88.
90. 1 ⊢ f ∈ Map X {∅, {∅}} → f ∈ rng φ, <a href='subj_intro.htm'>subj_intro</a> 89.
91. 1 ⊢ ∀f. f ∈ Map X {∅, {∅}} → f ∈ rng φ, <a href='uq_intro.htm'>uq_intro</a> 90.
92. 1 ⊢ Map X {∅, {∅}} ⊆ rng φ, <a href='incl_intro.htm'>incl_intro</a> 91.
93. 1 ⊢ sur φ (power X) (Map X {∅, {∅}}), <a href='sur_intro.htm'>sur_intro</a> 9 92.

94. 1 ⊢ bij φ (power X) (Map X {∅, {∅}}), <a href='bij_from_inj_sur.htm'>bij_from_inj_sur</a> 37 93.
95. 1 ⊢ ∃g. bij g (power X) (Map X {∅, {∅}}), <a href='ex_intro.htm'>ex_intro</a> 94.
96. 1 ⊢ num_eq (power X) (Map X {∅, {∅}}), <a href='num_eq_intro.htm'>num_eq_intro</a> 95.
power_equinum_indicators. ⊢ set X →
  num_eq (power X) (Map X {∅, {∅}}), <a href='subj_intro.htm'>subj_intro</a> 96.
</pre>
<p><b>Dependencies</b><br>The given proof depends on 12 axioms:<br><a href='comp.htm'>comp</a>, <a href='efq.htm'>efq</a>, <a href='eq_refl.htm'>eq_refl</a>, <a href='eq_subst.htm'>eq_subst</a>, <a href='ext.htm'>ext</a>, <a href='infinity.htm'>infinity</a>, <a href='lem.htm'>lem</a>, <a href='pairing.htm'>pairing</a>, <a href='power.htm'>power</a>, <a href='subset.htm'>subset</a>, <a href='substitution.htm'>substitution</a>, <a href='union.htm'>union</a>.</p>
</body>
</html>