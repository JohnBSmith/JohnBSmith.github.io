<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>pair_scd_conj</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="main.css" rel="stylesheet">
</head>
<body>
<h3>Theorem pair_scd_conj</h3>
<div class='box'><div class='thm'><b class='thm'>Theorem.</b> pair_scd_conj<br>
set x ∧ set y → scd (x, y) = y</div></div>
<pre><b>Proof</b>
01. 1 ⊢ set x ∧ set y, <a href='hypo.htm'>hypo</a>.
02. 1 ⊢ set x, <a href='conj_eliml.htm'>conj_eliml</a> 1.
03. 1 ⊢ set y, <a href='conj_elimr.htm'>conj_elimr</a> 1.
04. ⊢ ⋂(x, y) = ⋂(x, y), <a href='eq_refl.htm'>eq_refl</a>.
05. ⊢ (x, y) = {{x}, {x, y}}, <a href='pair_eq.htm'>pair_eq</a>.
06. ⊢ ⋂(x, y) = ⋂{{x}, {x, y}}, <a href='eq_subst.htm'>eq_subst</a> 5 4, P u ↔ ⋂(x, y) = ⋂u.
07. 1 ⊢ set {x}, <a href='set_sg.htm'>set_sg</a> 2.
08. 1 ⊢ set {x, y}, <a href='pairing.htm'>pairing</a> 2 3.
09. 1 ⊢ set {x} ∧ set {x, y}, <a href='conj_intro.htm'>conj_intro</a> 7 8.
10. 1 ⊢ ⋂{{x}, {x, y}} = {x} ∩ {x, y}, <a href='Intersection_pair_set.htm'>Intersection_pair_set</a> 9.
11. 1 ⊢ ⋂(x, y) = {x} ∩ {x, y}, <a href='eq_trans.htm'>eq_trans</a> 6 10.
12. ⊢ {x} ⊆ {x, y}, <a href='union_incl_left.htm'>union_incl_left</a>.
13. ⊢ {x} ∩ {x, y} = {x}, <a href='intersection_from_incl.htm'>intersection_from_incl</a> 12.
14. 1 ⊢ ⋂(x, y) = {x}, <a href='eq_trans.htm'>eq_trans</a> 11 13.
15. 1 ⊢ ⋂⋂(x, y) = ⋂{x}, <a href='f_equal.htm'>f_equal</a> 14, f u = ⋂u.
16. 1 ⊢ ⋂{x} = x, <a href='Intersection_sg.htm'>Intersection_sg</a> 2.
17. 1 ⊢ ⋂⋂(x, y) = x, <a href='eq_trans.htm'>eq_trans</a> 15 16.
18. ⊢ fst (x, y) = ⋂⋂(x, y), <a href='fst_eq.htm'>fst_eq</a>.
19. 1 ⊢ fst (x, y) = x, <a href='eq_trans.htm'>eq_trans</a> 18 17.
pair_fst_conj. ⊢ set x ∧ set y → fst (x, y) = x, <a href='subj_intro.htm'>subj_intro</a> 19.
20. ⊢ ⋃(x, y) = ⋃(x, y), <a href='eq_refl.htm'>eq_refl</a>.
21. ⊢ ⋃(x, y) = ⋃{{x}, {x, y}}, <a href='eq_subst.htm'>eq_subst</a> 5 20, P u ↔ ⋃(x, y) = ⋃u.
22. 1 ⊢ ⋃{{x}, {x, y}} = {x} ∪ {x, y}, <a href='Union_pair_set.htm'>Union_pair_set</a> 9.
23. 1 ⊢ ⋃(x, y) = {x} ∪ {x, y}, <a href='eq_trans.htm'>eq_trans</a> 21 22.
24. ⊢ {x} ∪ {x, y} = {x, y}, <a href='union_from_incl.htm'>union_from_incl</a> 12.
25. 1 ⊢ ⋃(x, y) = {x, y}, <a href='eq_trans.htm'>eq_trans</a> 23 24.
26. 1 ⊢ ⋃⋃(x, y) = ⋃{x, y}, <a href='f_equal.htm'>f_equal</a> 25, f u = ⋃u.
27. 1 ⊢ ⋃{x, y} = x ∪ y, <a href='Union_pair_set.htm'>Union_pair_set</a> 1.
28. 1 ⊢ ⋃⋃(x, y) = x ∪ y, <a href='eq_trans.htm'>eq_trans</a> 26 27.
29. 1 ⊢ ⋂{x, y} = x ∩ y, <a href='Intersection_pair_set.htm'>Intersection_pair_set</a> 1.
30. 1 ⊢ ⋂⋃(x, y) = ⋂{x, y}, <a href='f_equal.htm'>f_equal</a> 25, f u = ⋂u.
31. 1 ⊢ ⋂⋃(x, y) = x ∩ y, <a href='eq_trans.htm'>eq_trans</a> 30 29.
32. ⊢ scd (x, y) = ⋂⋃(x, y) ∪ (⋃⋃(x, y) \ ⋂⋂(x, y)), <a href='scd_eq.htm'>scd_eq</a>.
33. 1 ⊢ scd (x, y) = (x ∩ y) ∪ (⋃⋃(x, y) \ ⋂⋂(x, y)),
  <a href='eq_subst.htm'>eq_subst</a> 31 32, P a ↔ scd (x, y) = a ∪ (⋃⋃(x, y) \ ⋂⋂(x, y)).
34. 1 ⊢ scd (x, y) = (x ∩ y) ∪ ((x ∪ y) \ ⋂⋂(x, y)),
  <a href='eq_subst.htm'>eq_subst</a> 28 33, P a ↔ scd (x, y) = (x ∩ y) ∪ (a \ ⋂⋂(x, y)).
35. 1 ⊢ scd (x, y) = (x ∩ y) ∪ ((x ∪ y) \ x),
  <a href='eq_subst.htm'>eq_subst</a> 17 34, P a ↔ scd (x, y) = (x ∩ y) ∪ ((x ∪ y) \ a).
36. ⊢ (x ∪ y) \ x = (x ∪ y) ∩ compl x, <a href='diff_as_inter.htm'>diff_as_inter</a>.
37. 1 ⊢ scd (x, y) = (x ∩ y) ∪ ((x ∪ y) ∩ compl x),
  <a href='eq_subst.htm'>eq_subst</a> 36 35, P a ↔ scd (x, y) = (x ∩ y) ∪ a.
38. ⊢ (x ∪ y) ∩ compl x = (x ∩ compl x) ∪ (y ∩ compl x),
  <a href='intersection_distr.htm'>intersection_distr</a>.
39. ⊢ x ∩ compl x = ∅, <a href='intersection_compl.htm'>intersection_compl</a>.
40. ⊢ (x ∩ compl x) ∪ (y ∩ compl x) = ∅ ∪ (y ∩ compl x),
  <a href='f_equal.htm'>f_equal</a> 39, f a = a ∪ (y ∩ compl x).
41. ⊢ ∅ ∪ (y ∩ compl x) = y ∩ compl x, <a href='union_neutl.htm'>union_neutl</a>.
42. ⊢ (x ∩ compl x) ∪ (y ∩ compl x) = y ∩ compl x, <a href='eq_trans.htm'>eq_trans</a> 40 41.
43. ⊢ (x ∪ y) ∩ compl x = y ∩ compl x, <a href='eq_trans.htm'>eq_trans</a> 38 42.
44. ⊢ y ∩ compl x = compl x ∩ y, <a href='intersection_comm.htm'>intersection_comm</a>.
45. ⊢ (x ∪ y) ∩ compl x = compl x ∩ y, <a href='eq_trans.htm'>eq_trans</a> 43 44.
46. 1 ⊢ scd (x, y) = (x ∩ y) ∪ (compl x ∩ y),
  <a href='eq_subst.htm'>eq_subst</a> 45 37, P a ↔ scd (x, y) = (x ∩ y) ∪ a.
47. ⊢ (x ∪ compl x) ∩ y = (x ∩ y) ∪ (compl x ∩ y), <a href='intersection_distr.htm'>intersection_distr</a>.
48. ⊢ (x ∩ y) ∪ (compl x ∩ y) = (x ∪ compl x) ∩ y, <a href='eq_symm.htm'>eq_symm</a> 47.
49. 1 ⊢ scd (x, y) = (x ∪ compl x) ∩ y, <a href='eq_trans.htm'>eq_trans</a> 46 48.
50. ⊢ x ∪ compl x = UnivCl, <a href='union_compl.htm'>union_compl</a>.
51. ⊢ (x ∪ compl x) ∩ y = UnivCl ∩ y, <a href='f_equal.htm'>f_equal</a> 50, f a = a ∩ y.
52. ⊢ UnivCl ∩ y = y, <a href='intersection_neutl.htm'>intersection_neutl</a>.
53. ⊢ (x ∪ compl x) ∩ y = y, <a href='eq_trans.htm'>eq_trans</a> 51 52.
54. 1 ⊢ scd (x, y) = y, <a href='eq_trans.htm'>eq_trans</a> 49 53.
pair_scd_conj. ⊢ set x ∧ set y → scd (x, y) = y, <a href='subj_intro.htm'>subj_intro</a> 54.
</pre>
<p><b>Dependencies</b><br>The given proof depends on seven axioms:<br><a href='comp.htm'>comp</a>, <a href='efq.htm'>efq</a>, <a href='eq_refl.htm'>eq_refl</a>, <a href='eq_subst.htm'>eq_subst</a>, <a href='ext.htm'>ext</a>, <a href='lem.htm'>lem</a>, <a href='pairing.htm'>pairing</a>.</p>
</body>
</html>