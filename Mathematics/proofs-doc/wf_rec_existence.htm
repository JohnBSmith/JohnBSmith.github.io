<!DOCTYPE html>
<html>
<head>
  <meta charset="UTF-8">
  <title>wf_rec_existence</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link href="main.css" rel="stylesheet">
</head>
<body>
<h3>Theorem wf_rec_existence</h3>
<div class='box'><div class='thm'><b class='thm'>Theorem.</b> wf_rec_existence<br>
set X → set Y → wf R X →
  dom R ⊆ X → (∀x. ∀g. φ x g ∈ Y) → ∃f. set f ∧ map f X Y ∧
  ∀x. x ∈ X → app f x = φ x (restr f (inv_img R {x}))</div></div>
<p>This theorem states that a solution to <a href='wf_equi.htm'>well-founded</a>
recursion exists.<br>
<br>
<b>Proof sketch</b><br>
Consider the system<br>
&nbsp;&nbsp;F := {A ⊆ X × Y | ∀x. x ∈ X → ∀g. fn_on g (R<sup>−1</sup>{x}) →<br>
&nbsp;&nbsp;&nbsp;&nbsp;(∀u ∈ R<sup>−1</sup>{x}. (u, g u) ∈ A) →
(x,&nbsp;rec&nbsp;x&nbsp;g)&nbsp;∈&nbsp;A},<br>
with rec x g := φ x (g|<sub>R<sup>−1</sup>{x}</sub>). Let f := ⋂F.
The system F consists of all the relations that are
closed with respect to the recursion step. We can show f&nbsp;∈&nbsp;F, thus
f is the smallest among them. It holds that f is a mapping from
X to Y, because we can show<br>
&nbsp;&nbsp;∀x&nbsp;∈&nbsp;X. ∃!y ∈ Y. (x, y) ∈ f<br>
by means of well-founded induction over x. The induction hypothesis
says, the restriction of f to the initial segment R<sup>−1</sup>{x} is
a mapping, i.e. fn_on&nbsp;f&nbsp;(R<sup>−1</sup>{x}). So because f is closed,
we can specialize g := f to obtain (x,&nbsp;rec&nbsp;x&nbsp;f) ∈ f. So with
y := rec&nbsp;x&nbsp;f we have a y with (x,&nbsp;y) ∈ f. Now we need to show
uniqueness of y. So assume there would be an y' ≠ y with (x, y') ∈ f.
We need to show that this leads to a contradiction. Let
A := f&nbsp;\&nbsp;{(x,&nbsp;y')}. It holds that A&nbsp;∈&nbsp;F, which is absurd, because
f is the smallest relation and A is smaller by its construction. So
A&nbsp;∈&nbsp;F remains to be shown, i.e.<br>
&nbsp;&nbsp;(∀u ∈ R<sup>−1</sup>{a}. (u, g u) ∈ A) → (a, b) ∈ A<br>
with b := rec a g
for arbitrary a ∈ X and g with fn_on g (R<sup>−1</sup>{a}). To do this,
it must essentially be shown that (a, b) ≠ (x, y'). Assuming that
(a, b) = (x, y'), we obtain a = x and b = y'. From the premise, the
universal statement over the u, it follows that f&nbsp;u = g&nbsp;u for every
u in the initial segment, and thus f|<sub>R<sup>−1</sup>{x}</sub> =
g|<sub>R<sup>−1</sup>{x}</sub> by function extensionality. This works
precisely because the restrictions of f,&nbsp;g to the initial segment
already qualify as mappings, which also means that (u,&nbsp;g&nbsp;u)&nbsp;∈&nbsp;f is
equivalent to g&nbsp;u = f&nbsp;u. Hence, rec&nbsp;x&nbsp;f = rec&nbsp;a&nbsp;g,
since a = x. This results in y&nbsp;=&nbsp;b, thus y'&nbsp;=&nbsp;y, which
contradicts the first assumption. Finally, it remains to be shown that
f satisfies the recurrence. After unfolding f ∈ F we need
(u,&nbsp;f&nbsp;u) ∈ f, but this is equivalent to f&nbsp;u&nbsp;=&nbsp;f&nbsp;u, because f
already qualifies as a mapping. Thus we obtain (x, rec x f) ∈ f,
and therefore f&nbsp;x = rec&nbsp;x&nbsp;f, as desired. q.e.d.</p><pre><b>Proof</b>
let incl_map x g A ↔ (∀u. u ∈ inv_img R {x} → (u, app g u) ∈ A).
let rec x g = φ x (restr g (inv_img R {x})).
let closed A ↔ (∀x. x ∈ X → ∀g. fn_on g (inv_img R {x}) →
  incl_map x g A → (x, rec x g) ∈ A).
let F = {A | A ⊆ X × Y ∧ closed A}.
001. 1 ⊢ wf R X, <a href='hypo.htm'>hypo</a>.
002. 2 ⊢ dom R ⊆ X, <a href='hypo.htm'>hypo</a>.
003. 3 ⊢ ∀x. ∀f. φ x f ∈ Y, <a href='hypo.htm'>hypo</a>.
004. 4 ⊢ f = ⋂F, <a href='hypo.htm'>hypo</a>.

005. 5 ⊢ x ∈ X, <a href='hypo.htm'>hypo</a>.
006. 5 ⊢ set x, <a href='set_intro.htm'>set_intro</a> 5.
007. 3 ⊢ ∀f. φ x f ∈ Y, <a href='uq_elim.htm'>uq_elim</a> 3.
008. 3 ⊢ rec x g ∈ Y, <a href='uq_elim.htm'>uq_elim</a> 7.
009. 3 ⊢ set (rec x g), <a href='set_intro.htm'>set_intro</a> 8.
010. 3, 5 ⊢ set (x, rec x g), <a href='set_pair.htm'>set_pair</a> 6 9.

011. 11 ⊢ A ∈ F, <a href='hypo.htm'>hypo</a>.
012. 12 ⊢ fn_on g (inv_img R {x}), <a href='hypo.htm'>hypo</a>.
013. 11 ⊢ A ⊆ X × Y ∧ closed A, <a href='comp_elim.htm'>comp_elim</a> 11.
014. 11 ⊢ closed A, <a href='conj_elimr.htm'>conj_elimr</a> 13.
015. 11 ⊢ x ∈ X → ∀g. fn_on g (inv_img R {x}) →
  incl_map x g A → (x, rec x g) ∈ A, <a href='uq_elim.htm'>uq_elim</a> 14.
016. 5, 11 ⊢ ∀g. fn_on g (inv_img R {x}) →
  incl_map x g A → (x, rec x g) ∈ A, <a href='subj_elim.htm'>subj_elim</a> 15 5.
017. 5, 11, 12 ⊢ incl_map x g A → (x, rec x g) ∈ A,
  <a href='uq_bounded_elim.htm'>uq_bounded_elim</a> 16 12.
018. 4, 11 ⊢ f ⊆ A, <a href='Intersection_is_lower_bound.htm'>Intersection_is_lower_bound</a> 4 11.
019. 19 ⊢ incl_map x g f, <a href='hypo.htm'>hypo</a>.
020. 19 ⊢ u ∈ inv_img R {x} → (u, app g u) ∈ f, <a href='uq_elim.htm'>uq_elim</a> 19.
021. 21 ⊢ u ∈ inv_img R {x}, <a href='hypo.htm'>hypo</a>.
022. 19, 21 ⊢ (u, app g u) ∈ f, <a href='subj_elim.htm'>subj_elim</a> 20 21.
023. 4, 19, 11, 21 ⊢ (u, app g u) ∈ A, <a href='incl_elim.htm'>incl_elim</a> 18 22.
024. 4, 19, 11 ⊢ u ∈ inv_img R {x} → (u, app g u) ∈ A, <a href='subj_intro.htm'>subj_intro</a> 23.
025. 4, 19, 11 ⊢ incl_map x g A, <a href='uq_intro.htm'>uq_intro</a> 24.
026. 4, 5, 19, 12, 11 ⊢ (x, rec x g) ∈ A, <a href='subj_elim.htm'>subj_elim</a> 17 25.
027. 4, 5, 19, 12 ⊢ A ∈ F → (x, rec x g) ∈ A, <a href='subj_intro.htm'>subj_intro</a> 26.
028. 4, 5, 19, 12 ⊢ ∀A. A ∈ F → (x, rec x g) ∈ A, <a href='uq_intro.htm'>uq_intro</a> 27.
029. 3, 4, 5, 19, 12 ⊢ (x, rec x g) ∈ ⋂F, <a href='Intersection_intro.htm'>Intersection_intro</a> 10 28.
030. 3, 4, 5, 12, 19 ⊢ (x, rec x g) ∈ f,
  <a href='eq_subst_rev.htm'>eq_subst_rev</a> 4 29, P u ↔ (x, rec x g) ∈ u.
031. 3, 4, 5, 12 ⊢ incl_map x g f → (x, rec x g) ∈ f, <a href='subj_intro.htm'>subj_intro</a> 30.
032. 3, 4, 5 ⊢ fn_on g (inv_img R {x}) →
  incl_map x g f → (x, rec x g) ∈ f, <a href='subj_intro.htm'>subj_intro</a> 31.
033. 3, 4, 5 ⊢ ∀g. fn_on g (inv_img R {x}) →
  incl_map x g f → (x, rec x g) ∈ f, <a href='uq_intro.htm'>uq_intro</a> 32.
034. 3, 4 ⊢ x ∈ X → ∀g. fn_on g (inv_img R {x}) →
  incl_map x g f → (x, rec x g) ∈ f, <a href='subj_intro.htm'>subj_intro</a> 33.
035. 3, 4 ⊢ closed f, <a href='uq_intro.htm'>uq_intro</a> 34.

036. 3, 5 ⊢ (x, rec x g) ∈ X × Y, <a href='prod_intro.htm'>prod_intro</a> 5 8.
037. 37 ⊢ incl_map x g (X × Y), <a href='hypo.htm'>hypo</a>.
038. 3, 5, 37 ⊢ (x, rec x g) ∈ X × Y, <a href='wk.htm'>wk</a> 36.
039. 3, 5 ⊢ incl_map x g (X × Y) →
  (x, rec x g) ∈ X × Y, <a href='subj_intro.htm'>subj_intro</a> 38.
040. 3, 5, 12 ⊢ incl_map x g (X × Y) → (x, rec x g) ∈ X × Y, <a href='wk.htm'>wk</a> 39.
041. 3, 5 ⊢ fn_on g (inv_img R {x}) → incl_map x g (X × Y) →
  (x, rec x g) ∈ X × Y, <a href='subj_intro.htm'>subj_intro</a> 40.
042. 3, 5 ⊢ ∀g. fn_on g (inv_img R {x}) →
  incl_map x g (X × Y) → (x, rec x g) ∈ X × Y, <a href='uq_intro.htm'>uq_intro</a> 41.
043. 3 ⊢ x ∈ X → ∀g. fn_on g (inv_img R {x}) →
  incl_map x g (X × Y) → (x, rec x g) ∈ X × Y, <a href='subj_intro.htm'>subj_intro</a> 42.
044. 3 ⊢ closed (X × Y), <a href='uq_intro.htm'>uq_intro</a> 43.
045. ⊢ X × Y ⊆ X × Y, <a href='incl_refl.htm'>incl_refl</a>.
046. 3 ⊢ X × Y ⊆ X × Y ∧ closed (X × Y), <a href='conj_intro.htm'>conj_intro</a> 45 44.
047. 47 ⊢ set X, <a href='hypo.htm'>hypo</a>.
048. 48 ⊢ set Y, <a href='hypo.htm'>hypo</a>.
049. 47, 48 ⊢ set (X × Y), <a href='set_prod.htm'>set_prod</a> 47 48.
050. 47, 48, 3 ⊢ X × Y ∈ F,
  <a href='comp_intro.htm'>comp_intro</a> 49 46, P A ↔ (A ⊆ X × Y ∧ closed A).
051. 47, 48, 3, 4 ⊢ f ⊆ X × Y, <a href='Intersection_is_lower_bound.htm'>Intersection_is_lower_bound</a> 4 50.
052. 47, 48, 3, 4 ⊢ f ⊆ X × Y ∧ closed f, <a href='conj_intro.htm'>conj_intro</a> 51 35.
053. 47, 48, 3, 4 ⊢ set f, <a href='subset.htm'>subset</a> 51 49.
054. 47, 48, 3, 4 ⊢ f ∈ F, <a href='comp_intro.htm'>comp_intro</a> 53 52.

055. 55 ⊢ x ∈ X, <a href='hypo.htm'>hypo</a>.
056. 56 ⊢ ∀u. u ∈ X → (u, x) ∈ R →
  ∃y0. y0 ∈ Y ∧ ∀y. y0 = y ↔ (u, y) ∈ f, <a href='hypo.htm'>hypo</a>.
057. 57 ⊢ u ∈ inv_img R {x}, <a href='hypo.htm'>hypo</a>.
058. 56 ⊢ u ∈ X → (u, x) ∈ R →
  ∃y0. y0 ∈ Y ∧ ∀y. y0 = y ↔ (u, y) ∈ f, <a href='uq_elim.htm'>uq_elim</a> 56.
059. 57 ⊢ ∃a. a ∈ {x} ∧ (u, a) ∈ R, <a href='inv_img_elim.htm'>inv_img_elim</a> 57.
060. 60 ⊢ a ∈ {x} ∧ (u, a) ∈ R, <a href='hypo.htm'>hypo</a>.
061. 60 ⊢ a ∈ {x}, <a href='conj_eliml.htm'>conj_eliml</a> 60.
062. 60 ⊢ (u, a) ∈ R, <a href='conj_elimr.htm'>conj_elimr</a> 60.
063. 55 ⊢ set x, <a href='set_intro.htm'>set_intro</a> 55.
064. 55, 60 ⊢ a = x, <a href='sg_elim.htm'>sg_elim</a> 63 61.
065. 55, 60 ⊢ (u, x) ∈ R, <a href='eq_subst.htm'>eq_subst</a> 64 62, P x ↔ (u, x) ∈ R.
066. 55, 57 ⊢ (u, x) ∈ R, <a href='ex_elim.htm'>ex_elim</a> 59 65.
067. 60 ⊢ u ∈ dom R, <a href='dom_intro.htm'>dom_intro</a> 62.
068. 57 ⊢ u ∈ dom R, <a href='ex_elim.htm'>ex_elim</a> 59 67.
069. 2, 57 ⊢ u ∈ X, <a href='incl_elim.htm'>incl_elim</a> 2 68.
070. 2, 56, 57 ⊢ (u, x) ∈ R → ∃y0. y0 ∈ Y ∧ ∀y. y0 = y ↔ (u, y) ∈ f,
  <a href='subj_elim.htm'>subj_elim</a> 58 69.
071. 2, 55, 56, 57 ⊢ ∃y0. y0 ∈ Y ∧ ∀y. y0 = y ↔ (u, y) ∈ f,
  <a href='subj_elim.htm'>subj_elim</a> 70 66.
072. ⊢ y ∈ Y → set y, <a href='set_intro.htm'>set_intro</a>.
073. ⊢ ∀y. y ∈ Y → set y, <a href='uq_intro.htm'>uq_intro</a> 72.
074. 2, 55, 56, 57 ⊢ ∃y0. set y0 ∧ ∀y. y0 = y ↔ (u, y) ∈ f,
  <a href='ex_weaken_conj.htm'>ex_weaken_conj</a> 73 71.
075. 2, 55, 56, 57 ⊢ ∃y0. set y0 ∧ {y0} = {y | (u, y) ∈ f},
  <a href='sg_eq_from_ex_uniq.htm'>sg_eq_from_ex_uniq</a> 74.
076. 2, 55, 56 ⊢
  u ∈ inv_img R {x} → ∃y0. set y0 ∧ ∀y. y0 = y ↔ (u, y) ∈ f,
  <a href='subj_intro.htm'>subj_intro</a> 74.
077. 2, 55, 56 ⊢
  ∀u. u ∈ inv_img R {x} → ∃y0. set y0 ∧ ∀y. y0 = y ↔ (u, y) ∈ f,
  <a href='uq_intro.htm'>uq_intro</a> 76.
078. 47, 48, 3, 4 ⊢ relation f, <a href='relation_from_incl.htm'>relation_from_incl</a> 51.
079. 47, 48, 2, 3, 4, 55, 56 ⊢ fn_on f (inv_img R {x}),
  <a href='fn_on_intro.htm'>fn_on_intro</a> 78 77.

080. ⊢ app f u = app f u, <a href='eq_refl.htm'>eq_refl</a>.
081. 2, 55, 56, 57 ⊢ (u, app f u) ∈ f, <a href='app_elim_lemma.htm'>app_elim_lemma</a> 75 80.
082. 3, 4, 55 ⊢ ∀g. fn_on g (inv_img R {x}) → incl_map x g f →
  (x, rec x g) ∈ f, <a href='uq_bounded_elim.htm'>uq_bounded_elim</a> 35 55.
083. 47, 48, 2, 3, 4, 55, 56 ⊢ incl_map x f f →
  (x, rec x f) ∈ f, <a href='uq_bounded_elim.htm'>uq_bounded_elim</a> 82 79.
084. 2, 55, 56 ⊢ u ∈ inv_img R {x} → (u, app f u) ∈ f, <a href='subj_intro.htm'>subj_intro</a> 81.
085. 2, 55, 56 ⊢ incl_map x f f, <a href='uq_intro.htm'>uq_intro</a> 84.
086. 47, 48, 2, 3, 4, 55, 56 ⊢
  (x, rec x f) ∈ f, <a href='subj_elim.htm'>subj_elim</a> 83 85.
087. 3 ⊢ ∀f. φ x f ∈ Y, <a href='uq_elim.htm'>uq_elim</a> 3.
088. 3 ⊢ rec x f ∈ Y, <a href='uq_elim.htm'>uq_elim</a> 87.
089. 47, 48, 2, 3, 4, 55, 56 ⊢ rec x f ∈ Y ∧
  (x, rec x f) ∈ f, <a href='conj_intro.htm'>conj_intro</a> 88 86.
090. 47, 48, 2, 3, 4, 55, 56 ⊢ ∃y. y ∈ Y ∧ (x, y) ∈ f, <a href='ex_intro.htm'>ex_intro</a> 89.

091. 91 ⊢ (x, y') ∈ f, <a href='hypo.htm'>hypo</a>.
092. 92 ⊢ ¬y' = rec x f, <a href='hypo.htm'>hypo</a>.
093. ⊢ f \ {(x, y')} ⊆ f, <a href='diff_incl.htm'>diff_incl</a>.
094. 47, 48, 3, 4 ⊢ f \ {(x, y')} ⊆ X × Y, <a href='incl_trans.htm'>incl_trans</a> 93 51.
095. 95 ⊢ a ∈ X, <a href='hypo.htm'>hypo</a>.
096. 96 ⊢ fn_on g (inv_img R {a}), <a href='hypo.htm'>hypo</a>.
097. 97 ⊢ incl_map a g (f \ {(x, y')}), <a href='hypo.htm'>hypo</a>.
098. 98 ⊢ u ∈ inv_img R {a}, <a href='hypo.htm'>hypo</a>.
099. 97, 98 ⊢ (u, app g u) ∈ f \ {(x, y')},
  <a href='uq_bounded_elim.htm'>uq_bounded_elim</a> 97 98.
100. 97, 98 ⊢ (u, app g u) ∈ f, <a href='diff_eliml.htm'>diff_eliml</a> 99.
101. 97 ⊢ u ∈ inv_img R {a} → (u, app g u) ∈ f, <a href='subj_intro.htm'>subj_intro</a> 100.
102. 97 ⊢ incl_map a g f, <a href='uq_intro.htm'>uq_intro</a> 101.
103. 3, 4, 95 ⊢ ∀g. fn_on g (inv_img R {a}) →
  incl_map a g f → (a, rec a g) ∈ f, <a href='uq_bounded_elim.htm'>uq_bounded_elim</a> 35 95.
104. 3, 4, 95, 96 ⊢ incl_map a g f →
  (a, rec a g) ∈ f, <a href='uq_bounded_elim.htm'>uq_bounded_elim</a> 103 96.
105. 3, 4, 95, 97, 96 ⊢
  (a, rec a g) ∈ f, <a href='subj_elim.htm'>subj_elim</a> 104 102.
106. 106 ⊢ (a, rec a g) = (x, y'), <a href='hypo.htm'>hypo</a>.
107. 3 ⊢ ∀f. φ x f ∈ Y, <a href='uq_elim.htm'>uq_elim</a> 3.
108. 3 ⊢ φ x f ∈ Y, <a href='uq_elim.htm'>uq_elim</a> 107.
109. 3 ⊢ set (φ x f), <a href='set_intro.htm'>set_intro</a> 108.
110. 3 ⊢ set (rec a g), 109.
111. 95 ⊢ set a, <a href='set_intro.htm'>set_intro</a> 95.
112. 3, 95, 106 ⊢ a = x ∧ rec a g = y',
  <a href='pair_property.htm'>pair_property</a> 111 110 106.
113. 3, 95, 106 ⊢ a = x, <a href='conj_eliml.htm'>conj_eliml</a> 112.
114. 3, 95, 106 ⊢ rec a g = y', <a href='conj_elimr.htm'>conj_elimr</a> 112.
115. 97 ⊢ u ∈ inv_img R {a} → (u, app g u) ∈ f, <a href='subj_intro.htm'>subj_intro</a> 100.
116. 3, 95, 106, 97 ⊢
  u ∈ inv_img R {x} → (u, app g u) ∈ f, <a href='eq_subst.htm'>eq_subst</a> 113 115.
117. 3, 95, 97, 106, 57 ⊢ (u, app g u) ∈ f, <a href='subj_elim.htm'>subj_elim</a> 116 57.
118. 2, 3, 55, 56, 95, 97, 106, 57 ⊢
  app g u = app f u, <a href='app_intro_lemma.htm'>app_intro_lemma</a> 75 117.
119. 2, 3, 55, 56, 95, 97, 106, 57 ⊢
  app f u = app g u, <a href='eq_symm.htm'>eq_symm</a> 118.
120. 2, 3, 55, 56, 95, 97, 106 ⊢
  u ∈ inv_img R {x} → app f u = app g u, <a href='subj_intro.htm'>subj_intro</a> 119.
121. 2, 3, 55, 56, 95, 97, 106 ⊢
  ∀u. u ∈ inv_img R {x} → app f u = app g u, <a href='uq_intro.htm'>uq_intro</a> 120.
122. 3, 95, 106, 96 ⊢ fn_on g (inv_img R {x}), <a href='eq_subst.htm'>eq_subst</a> 113 96.
123. 47, 48, 2, 3, 4, 55, 56, 95, 97, 106, 96 ⊢
  restr f (inv_img R {x}) = restr g (inv_img R {x}),
  <a href='fn_on_extensionality.htm'>fn_on_extensionality</a> 79 122 121.
124. 3, 95, 106 ⊢ rec x g = y', <a href='eq_subst.htm'>eq_subst</a> 113 114.
125. 47, 48, 2, 3, 4, 55, 56, 95, 97, 106, 96 ⊢
  rec x f = y', <a href='eq_subst_rev.htm'>eq_subst_rev</a> 123 124, P u ↔ φ x u = y'.
126. 47, 48, 2, 3, 4, 55, 56, 95, 97, 106, 96 ⊢
  y' = rec x f, <a href='eq_symm.htm'>eq_symm</a> 125.
127. 47, 48, 2, 3, 4, 55, 56, 92, 95, 97, 96, 106 ⊢ ⊥,
  <a href='neg_elim.htm'>neg_elim</a> 92 126.
128. 47, 48, 2, 3, 4, 55, 56, 92, 95, 97, 96 ⊢
  ¬(a, rec a g) = (x, y'), <a href='neg_intro.htm'>neg_intro</a> 127.
129. 91 ⊢ set (x, y'), <a href='set_intro.htm'>set_intro</a> 91.
130. 47, 48, 2, 3, 4, 55, 56, 91, 92, 95, 97, 96 ⊢
  ¬(a, rec a g) ∈ {(x, y')}, <a href='sg_neg_intro.htm'>sg_neg_intro</a> 129 128.
131. 47, 48, 2, 3, 4, 55, 56, 91, 92, 95, 96, 97 ⊢
  (a, rec a g) ∈ f \ {(x, y')}, <a href='diff_intro.htm'>diff_intro</a> 105 130.
132. 47, 48, 2, 3, 4, 55, 56, 91, 92, 95 ⊢
  fn_on g (inv_img R {a}) → incl_map a g (f \ {(x, y')}) →
  (a, rec a g) ∈ f \ {(x, y')}, <a href='subj_intro_ii.htm'>subj_intro_ii</a> 131.
133. 47, 48, 2, 3, 4, 55, 56, 91, 92, 95 ⊢
  ∀g. fn_on g (inv_img R {a}) → incl_map a g (f \ {(x, y')}) →
  (a, rec a g) ∈ f \ {(x, y')}, <a href='uq_intro.htm'>uq_intro</a> 132.
134. 47, 48, 2, 3, 4, 55, 56, 91, 92 ⊢
  a ∈ X → ∀g. fn_on g (inv_img R {a}) →
  incl_map a g (f \ {(x, y')}) →
  (a, rec a g) ∈ f \ {(x, y')}, <a href='subj_intro.htm'>subj_intro</a> 133.
135. 47, 48, 2, 3, 4, 55, 56, 91, 92 ⊢
  ∀a. a ∈ X → ∀g. fn_on g (inv_img R {a}) →
  incl_map a g (f \ {(x, y')}) →
  (a, rec a g) ∈ f \ {(x, y')}, <a href='uq_intro.htm'>uq_intro</a> 134.
136. 47, 48, 2, 3, 4, 55, 56, 91, 92 ⊢
  f \ {(x, y')} ⊆ X × Y ∧
  ∀a. a ∈ X → ∀g. fn_on g (inv_img R {a}) →
  incl_map a g (f \ {(x, y')}) →
  (a, rec a g) ∈ f \ {(x, y')}, <a href='conj_intro.htm'>conj_intro</a> 94 135.
137. 47, 48, 3, 4 ⊢ set f, <a href='set_intro.htm'>set_intro</a> 54.
138. 47, 48, 3, 4 ⊢ set (f \ {(x, y')}), <a href='subset.htm'>subset</a> 93 137.
139. 47, 48, 2, 3, 4, 55, 56, 91, 92 ⊢
  f \ {(x, y')} ∈ F, <a href='comp_intro.htm'>comp_intro</a> 138 136,
    P A ↔ A ⊆ X × Y ∧ closed A.
140. 47, 48, 2, 3, 4, 55, 56, 91, 92 ⊢
  f ⊆ f \ {(x, y')}, <a href='Intersection_is_lower_bound.htm'>Intersection_is_lower_bound</a> 4 139.
141. 47, 48, 2, 3, 4, 55, 56, 91, 92 ⊢
  (x, y') ∈ f \ {(x, y')}, <a href='incl_elim.htm'>incl_elim</a> 140 91.
142. 47, 48, 2, 3, 4, 55, 56, 91, 92 ⊢
  ¬(x, y') ∈ {(x, y')}, <a href='diff_elimr.htm'>diff_elimr</a> 141.
143. ⊢ (x, y') = (x, y'), <a href='eq_refl.htm'>eq_refl</a>.
144. 91 ⊢ (x, y') ∈ {(x, y')}, <a href='sg_intro.htm'>sg_intro</a> 129 143.
145. 47, 48, 2, 3, 4, 55, 56, 91, 92 ⊢ ⊥, <a href='neg_elim.htm'>neg_elim</a> 142 144.
146. 47, 48, 2, 3, 4, 55, 56, 91 ⊢
  ¬¬y' = rec x f, <a href='neg_intro.htm'>neg_intro</a> 145.
147. 47, 48, 2, 3, 4, 55, 56, 91 ⊢
  y' = rec x f, <a href='dne.htm'>dne</a> 146.
148. 47, 48, 2, 3, 4, 55, 56, 91 ⊢
  rec x f = y', <a href='eq_symm.htm'>eq_symm</a> 147.
149. 47, 48, 2, 3, 4, 55, 56 ⊢
  (x, y') ∈ f → rec x f = y', <a href='subj_intro.htm'>subj_intro</a> 148.
150. 47, 48, 2, 3, 4, 55, 56 ⊢
  ∀y'. (x, y') ∈ f → rec x f = y', <a href='uq_intro.htm'>uq_intro</a> 149.
151. 47, 48, 2, 3, 4, 55, 56 ⊢ rec x f ∈ Y ∧
  (x, φ x (restr f (inv_img R {x}))) ∈ f ∧
  ∀y'. (x, y') ∈ f → rec x f = y',
  <a href='conj_intro.htm'>conj_intro</a> 89 150.
152. 47, 48, 2, 3, 4, 55, 56 ⊢ ∃y. y ∈ Y ∧
  (x, y) ∈ f ∧ ∀y'. (x, y') ∈ f → y = y', <a href='ex_intro.htm'>ex_intro</a> 151.
153. 47, 48, 2, 3, 4, 55, 56 ⊢ ∃z. z ∈ Y ∧
  ∀y. z = y ↔ (x, y) ∈ f, <a href='ex_uniq_from_mixed_form.htm'>ex_uniq_from_mixed_form</a> 152.
154. 47, 48, 2, 3, 4 ⊢ x ∈ X →
  (∀u. u ∈ X → (u, x) ∈ R → ∃z. z ∈ Y ∧ ∀y. z = y ↔ (u, y) ∈ f) →
  (∃z. z ∈ Y ∧ ∀y. z = y ↔ (x, y) ∈ f), <a href='subj_intro_ii.htm'>subj_intro_ii</a> 153.
155. 47, 48, 2, 3, 4 ⊢ ∀x. x ∈ X →
  (∀u. u ∈ X → (u, x) ∈ R → ∃z. z ∈ Y ∧ ∀y. z = y ↔ (u, y) ∈ f) →
  ∃z. z ∈ Y ∧ ∀y. z = y ↔ (x, y) ∈ f, <a href='uq_intro.htm'>uq_intro</a> 154.
156. 47, 48, 1, 2, 3, 4 ⊢ ∀x. x ∈ X →
  ∃z. z ∈ Y ∧ ∀y. z = y ↔ (x, y) ∈ f, <a href='wf_induction.htm'>wf_induction</a> 1 155.
157. 47, 48, 3, 4 ⊢ dom f ⊆ X, <a href='dom_of_subclass_prod.htm'>dom_of_subclass_prod</a> 51.
158. 47, 48, 3, 4 ⊢ rng f ⊆ Y, <a href='rng_of_subclass_prod.htm'>rng_of_subclass_prod</a> 51.
159. 47, 48, 1, 2, 3, 4 ⊢ X ⊆ dom f, <a href='subclass_dom_from_ex_uniq.htm'>subclass_dom_from_ex_uniq</a> 156.
160. 47, 48, 1, 2, 3, 4 ⊢ dom f = X, <a href='incl_antisym.htm'>incl_antisym</a> 157 159.
161. 47, 48, 1, 2, 3, 4 ⊢ fn_on f X, <a href='fn_on_intro_cod.htm'>fn_on_intro_cod</a> 78 156.
162. 47, 48, 1, 2, 3, 4 ⊢ function f, <a href='function_from_fn_on.htm'>function_from_fn_on</a> 161 157.
163. 47, 48, 1, 2, 3, 4 ⊢ map f X Y, <a href='map_intro.htm'>map_intro</a> 162 160 158.

164. ⊢ inv_img R {x} ⊆ dom R, <a href='inv_img_incl_in_dom.htm'>inv_img_incl_in_dom</a>.
165. 2 ⊢ inv_img R {x} ⊆ X, <a href='incl_trans.htm'>incl_trans</a> 164 2.
166. 166 ⊢ u ∈ inv_img R {x}, <a href='hypo.htm'>hypo</a>.
167. 2, 166 ⊢ u ∈ X, <a href='incl_elim.htm'>incl_elim</a> 165 166.
168. ⊢ app f u = app f u, <a href='eq_refl.htm'>eq_refl</a>.
169. 47, 48, 1, 2, 3, 4, 166 ⊢ (u, app f u) ∈ f,
  <a href='map_app_elim.htm'>map_app_elim</a> 163 167 168.
170. 47, 48, 1, 2, 3, 4 ⊢
  u ∈ inv_img R {x} → (u, app f u) ∈ f, <a href='subj_intro.htm'>subj_intro</a> 169.
171. 47, 48, 1, 2, 3, 4 ⊢ incl_map x f f, <a href='uq_intro.htm'>uq_intro</a> 170.
172. 47, 48, 1, 2, 3, 4 ⊢ fn_on f (inv_img R {x}),
  <a href='fn_on_from_map.htm'>fn_on_from_map</a> 163 165.
173. 173 ⊢ x ∈ X, <a href='hypo.htm'>hypo</a>.
174. 3, 4, 173 ⊢ ∀g. fn_on g (inv_img R {x}) →
  incl_map x g f → (x, rec x g) ∈ f, <a href='subj_elim.htm'>subj_elim</a> 34 173.
175. 47, 48, 1, 2, 3, 4, 173 ⊢
  incl_map x f f → (x, rec x f) ∈ f, <a href='uq_bounded_elim.htm'>uq_bounded_elim</a> 174 172.
176. 47, 48, 1, 2, 3, 4, 173 ⊢
  (x, rec x f) ∈ f, <a href='subj_elim.htm'>subj_elim</a> 175 171.
177. 47, 48, 1, 2, 3, 4, 173 ⊢
  rec x f = app f x, <a href='map_app_intro.htm'>map_app_intro</a> 163 176.
178. 47, 48, 1, 2, 3, 4, 173 ⊢
  app f x = rec x f, <a href='eq_symm.htm'>eq_symm</a> 177.
179. 47, 48, 1, 2, 3, 4 ⊢
  x ∈ X → app f x = rec x f, <a href='subj_intro.htm'>subj_intro</a> 178.
180. 47, 48, 1, 2, 3, 4 ⊢
  ∀x. x ∈ X → app f x = rec x f, <a href='uq_intro.htm'>uq_intro</a> 179.
181. 47, 48, 1, 2, 3, 4 ⊢ set f ∧ map f X Y, <a href='conj_intro.htm'>conj_intro</a> 137 163.
182. 47, 48, 1, 2, 3, 4 ⊢ set f ∧ map f X Y ∧
  ∀x. x ∈ X → app f x = rec x f, <a href='conj_intro.htm'>conj_intro</a> 181 180.
183. 47, 48, 1, 2, 3, 4 ⊢ ∃f. set f ∧ map f X Y ∧
  ∀x. x ∈ X → app f x = rec x f, <a href='ex_intro.htm'>ex_intro</a> 182.
184. 47, 48, 1, 2, 3 ⊢ f = ⋂F → ∃f. set f ∧ map f X Y ∧
  ∀x. x ∈ X → app f x = rec x f, <a href='subj_intro.htm'>subj_intro</a> 183.
185. 47, 48, 1, 2, 3 ⊢ ∀f. f = ⋂F → ∃f. set f ∧ map f X Y ∧
  ∀x. x ∈ X → app f x = rec x f, <a href='uq_intro.htm'>uq_intro</a> 184.
186. 47, 48, 1, 2, 3 ⊢ ∃f. set f ∧ map f X Y ∧
  ∀x. x ∈ X → app f x = rec x f, <a href='disused_eq.htm'>disused_eq</a> 185.
187. 47, 48 ⊢ wf R X → dom R ⊆ X → (∀x. ∀g. φ x g ∈ Y) →
  ∃f. set f ∧ map f X Y ∧
  ∀x. x ∈ X → app f x = rec x f, <a href='subj_intro_iii.htm'>subj_intro_iii</a> 186.
wf_rec_existence. ⊢ set X → set Y → wf R X →
  dom R ⊆ X → (∀x. ∀g. φ x g ∈ Y) → ∃f. set f ∧ map f X Y ∧
  ∀x. x ∈ X → app f x = φ x (restr f (inv_img R {x})),
  <a href='subj_intro_ii.htm'>subj_intro_ii</a> 187.
</pre>
<p><b>Dependencies</b><br>The given proof depends on 10 axioms:<br><a href='comp.htm'>comp</a>, <a href='efq.htm'>efq</a>, <a href='eq_refl.htm'>eq_refl</a>, <a href='eq_subst.htm'>eq_subst</a>, <a href='ext.htm'>ext</a>, <a href='lem.htm'>lem</a>, <a href='pairing.htm'>pairing</a>, <a href='power.htm'>power</a>, <a href='subset.htm'>subset</a>, <a href='union.htm'>union</a>.</p>
</body>
</html>