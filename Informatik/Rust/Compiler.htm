<!DOCTYPE html>
<html lang="de">
<head>
  <meta charset="UTF-8">
  <title>Rust-Buch</title>
  <link href="css/main.css" rel="stylesheet">
  <script src="js/main.js"></script>
</head>
<body>

<p>&uparrow;<a href="Rust.htm">Programmieren in Rust</a>
<h1>Compiler und Erstellungswerkzeuge</h1>

<h2>Abhängigkeiten</h2>

<p>Die Datei <code>Cargo.lock</code> enthält alle transitiven
Abhängigkeiten und ihre kryptografischen Hashwerte. Transitiv
bedeutet hier, dass wenn Bibliothek A von B
und B von C abhängig ist, dann auch
A von C abhängig ist. Da Bibliotheken wieder abhängig von anderen
Bibliotheken sein können, erhält man so einen
zykelfreien Graph von Abhängigkeiten.

<p>Wenn man also wissen möchte, wie viele Abhängigkeiten eine
Software tatsächlich hat, lohnt sich ein Blick in die Datei
<code>Cargo.lock</code>. Zu beachten ist aber, dass darin nur
Crates zu finden sind. Bibliotheken die über das C-ABI
angebunden wurden, sind darin natürlich nicht enthalten.

<h2>Aufräumen</h2>

<p>Der von Cargo erzeugte Ordner <code>target</code> sollte nicht im Backup
gespeichert werden, zumal er sehr groß werden kann. Man führt in der
Verzeichniswurzel den Befehl
<pre class="indent">
find -name "target"
</pre>
aus, daraufhin werden alle Verzeichnisse mit <code>target</code> aufgelistet.
In diesen Verzeichnissen führt man jeweils den Befehl
<pre class="indent">
cargo clean
</pre>
aus. Das Verzeichnis <code>target</code> verschwindet dann.

</body>
</html>

